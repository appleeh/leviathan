; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	E:\InfiniA-Library-3.0\com\include\com\win32\win32_mtsync.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?init@win_atomic@win32@common@@QAEXXZ		; common::win32::win_atomic::init
PUBLIC	?atomic_compare_exchange@win_atomic@win32@common@@QAEHHH@Z ; common::win32::win_atomic::atomic_compare_exchange
PUBLIC	_initSpinLock@4
PUBLIC	_acquireSpinLock@4
PUBLIC	_releaseSpinLock@4
EXTRN	__imp__InterlockedCompareExchange@12:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.cpp
_TEXT	SEGMENT
_pLock$ = 8						; size = 4
_releaseSpinLock@4 PROC

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 21   : 	pLock->init();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pLock$[ebp]
  00006	e8 00 00 00 00	 call	 ?init@win_atomic@win32@common@@QAEXXZ ; common::win32::win_atomic::init

; 22   : }

  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
_releaseSpinLock@4 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.cpp
_TEXT	SEGMENT
tv70 = -8						; size = 4
_n$ = -4						; size = 4
_pLock$ = 8						; size = 4
_acquireSpinLock@4 PROC

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$loop$6:

; 10   : 	int n;
; 11   : 	loop:
; 12   : 	if(!pLock->atomic_compare_exchange(1,0)) return;

  00014	6a 00		 push	 0
  00016	6a 01		 push	 1
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _pLock$[ebp]
  0001b	e8 00 00 00 00	 call	 ?atomic_compare_exchange@win_atomic@win32@common@@QAEHHH@Z ; common::win32::win_atomic::atomic_compare_exchange
  00020	85 c0		 test	 eax, eax
  00022	75 02		 jne	 SHORT $LN4@acquireSpi
  00024	eb 22		 jmp	 SHORT $LN1@acquireSpi
$LN4@acquireSpi:

; 13   : 			
; 14   : 	n = 1024;

  00026	c7 45 fc 00 04
	00 00		 mov	 DWORD PTR _n$[ebp], 1024 ; 00000400H
$LN2@acquireSpi:

; 15   : 	while(n--) YieldProcessor();

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _n$[ebp]
  00030	89 45 f8	 mov	 DWORD PTR tv70[ebp], eax
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _n$[ebp]
  00036	83 e9 01	 sub	 ecx, 1
  00039	89 4d fc	 mov	 DWORD PTR _n$[ebp], ecx
  0003c	83 7d f8 00	 cmp	 DWORD PTR tv70[ebp], 0
  00040	74 04		 je	 SHORT $LN3@acquireSpi
  00042	f3 90		 pause
  00044	eb e7		 jmp	 SHORT $LN2@acquireSpi
$LN3@acquireSpi:

; 16   : 	goto loop;

  00046	eb cc		 jmp	 SHORT $loop$6
$LN1@acquireSpi:

; 17   : }

  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
_acquireSpinLock@4 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.cpp
_TEXT	SEGMENT
_pLock$ = 8						; size = 4
_initSpinLock@4 PROC

; 4    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5    : 	pLock->init();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pLock$[ebp]
  00006	e8 00 00 00 00	 call	 ?init@win_atomic@win32@common@@QAEXXZ ; common::win32::win_atomic::init

; 6    : }

  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
_initSpinLock@4 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.h
;	COMDAT ?atomic_compare_exchange@win_atomic@win32@common@@QAEHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nExchange$ = 8						; size = 4
_nComperand$ = 12					; size = 4
?atomic_compare_exchange@win_atomic@win32@common@@QAEHHH@Z PROC ; common::win32::win_atomic::atomic_compare_exchange, COMDAT
; _this$ = ecx

; 99   : 	inline int atomic_compare_exchange(int nExchange, int nComperand) {return (int)InterlockedCompareExchange(&m_count, nExchange, nComperand);} // return long

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 0c	 mov	 eax, DWORD PTR _nComperand$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nExchange$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001c	52		 push	 edx
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedCompareExchange@12
  00023	3b f4		 cmp	 esi, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
?atomic_compare_exchange@win_atomic@win32@common@@QAEHHH@Z ENDP ; common::win32::win_atomic::atomic_compare_exchange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.h
;	COMDAT ?init@win_atomic@win32@common@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?init@win_atomic@win32@common@@QAEXXZ PROC		; common::win32::win_atomic::init, COMDAT
; _this$ = ecx

; 94   : 	inline void init() { m_count = 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?init@win_atomic@win32@common@@QAEXXZ ENDP		; common::win32::win_atomic::init
_TEXT	ENDS
END
