; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?init@win_atomic@win32@common@@QEAAXXZ		; common::win32::win_atomic::init
PUBLIC	?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z ; common::win32::win_atomic::atomic_compare_exchange
PUBLIC	initSpinLock
PUBLIC	acquireSpinLock
PUBLIC	releaseSpinLock
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?init@win_atomic@win32@common@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+19
	DD	imagerel $unwind$?init@win_atomic@win32@common@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z
pdata	ENDS
pdata	SEGMENT
$pdata$initSpinLock DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$initSpinLock
$pdata$acquireSpinLock DD imagerel $LN6
	DD	imagerel $LN6+99
	DD	imagerel $unwind$acquireSpinLock
$pdata$releaseSpinLock DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$releaseSpinLock
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
xdata	SEGMENT
$unwind$initSpinLock DD 021e01H
	DD	07006320aH
$unwind$acquireSpinLock DD 021e01H
	DD	07006520aH
$unwind$releaseSpinLock DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z DD 022701H
	DD	0700f1213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?init@win_atomic@win32@common@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.cpp
_TEXT	SEGMENT
pLock$ = 48
releaseSpinLock PROC

; 20   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 21   : 	pLock->init();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pLock$[rsp]
  00023	e8 00 00 00 00	 call	 ?init@win_atomic@win32@common@@QEAAXXZ ; common::win32::win_atomic::init

; 22   : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
releaseSpinLock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.cpp
_TEXT	SEGMENT
n$ = 32
tv70 = 36
pLock$ = 64
acquireSpinLock PROC

; 9    : {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$loop$7:

; 10   : 	int n;
; 11   : 	loop:
; 12   : 	if(!pLock->atomic_compare_exchange(1,0)) return;

  0001e	45 33 c0	 xor	 r8d, r8d
  00021	ba 01 00 00 00	 mov	 edx, 1
  00026	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pLock$[rsp]
  0002b	e8 00 00 00 00	 call	 ?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z ; common::win32::win_atomic::atomic_compare_exchange
  00030	85 c0		 test	 eax, eax
  00032	75 02		 jne	 SHORT $LN4@acquireSpi
  00034	eb 27		 jmp	 SHORT $LN1@acquireSpi
$LN4@acquireSpi:

; 13   : 			
; 14   : 	n = 1024;

  00036	c7 44 24 20 00
	04 00 00	 mov	 DWORD PTR n$[rsp], 1024	; 00000400H
$LN2@acquireSpi:

; 15   : 	while(n--) YieldProcessor();

  0003e	8b 44 24 20	 mov	 eax, DWORD PTR n$[rsp]
  00042	89 44 24 24	 mov	 DWORD PTR tv70[rsp], eax
  00046	8b 44 24 20	 mov	 eax, DWORD PTR n$[rsp]
  0004a	ff c8		 dec	 eax
  0004c	89 44 24 20	 mov	 DWORD PTR n$[rsp], eax
  00050	83 7c 24 24 00	 cmp	 DWORD PTR tv70[rsp], 0
  00055	74 04		 je	 SHORT $LN3@acquireSpi
  00057	f3 90		 pause
  00059	eb e3		 jmp	 SHORT $LN2@acquireSpi
$LN3@acquireSpi:

; 16   : 	goto loop;

  0005b	eb c1		 jmp	 SHORT $loop$7
$LN1@acquireSpi:

; 17   : }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
acquireSpinLock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.cpp
_TEXT	SEGMENT
pLock$ = 48
initSpinLock PROC

; 4    : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 5    : 	pLock->init();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pLock$[rsp]
  00023	e8 00 00 00 00	 call	 ?init@win_atomic@win32@common@@QEAAXXZ ; common::win32::win_atomic::init

; 6    : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
initSpinLock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.h
;	COMDAT ?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z
_TEXT	SEGMENT
tv70 = 0
this$ = 32
nExchange$ = 40
nComperand$ = 48
?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z PROC ; common::win32::win_atomic::atomic_compare_exchange, COMDAT

; 99   : 	inline int atomic_compare_exchange(int nExchange, int nComperand) {return (int)InterlockedCompareExchange(&m_count, nExchange, nComperand);} // return long

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 10	 sub	 rsp, 16
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 04 00 00 00	 mov	 ecx, 4
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]
  00027	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002c	8b 4c 24 28	 mov	 ecx, DWORD PTR nExchange$[rsp]
  00030	48 89 04 24	 mov	 QWORD PTR tv70[rsp], rax
  00034	8b 44 24 30	 mov	 eax, DWORD PTR nComperand$[rsp]
  00038	48 8b 14 24	 mov	 rdx, QWORD PTR tv70[rsp]
  0003c	48 8b 14 24	 mov	 rdx, QWORD PTR tv70[rsp]
  00040	f0 0f b1 0a	 lock cmpxchg DWORD PTR [rdx], ecx
  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z ENDP ; common::win32::win_atomic::atomic_compare_exchange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.h
;	COMDAT ?init@win_atomic@win32@common@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?init@win_atomic@win32@common@@QEAAXXZ PROC		; common::win32::win_atomic::init, COMDAT

; 94   : 	inline void init() { m_count = 0; }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
  00011	5f		 pop	 rdi
  00012	c3		 ret	 0
?init@win_atomic@win32@common@@QEAAXXZ ENDP		; common::win32::win_atomic::init
_TEXT	ENDS
END
