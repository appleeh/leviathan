; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?init@win_atomic@win32@common@@QEAAXXZ		; common::win32::win_atomic::init
PUBLIC	?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z ; common::win32::win_atomic::atomic_compare_exchange
PUBLIC	initSpinLock
PUBLIC	acquireSpinLock
PUBLIC	releaseSpinLock
;	COMDAT pdata
pdata	SEGMENT
$pdata$?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$initSpinLock DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$initSpinLock
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$acquireSpinLock DD imagerel $LN6
	DD	imagerel $LN6+77
	DD	imagerel $unwind$acquireSpinLock
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$releaseSpinLock DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$releaseSpinLock
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$releaseSpinLock DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$acquireSpinLock DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$initSpinLock DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z DD 011201H
	DD	02212H
xdata	ENDS
; Function compile flags: /Odtp
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.cpp
;	COMDAT releaseSpinLock
_TEXT	SEGMENT
pLock$ = 48
releaseSpinLock PROC					; COMDAT

; 20   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 21   : 	pLock->init();

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pLock$[rsp]
  0000e	e8 00 00 00 00	 call	 ?init@win_atomic@win32@common@@QEAAXXZ ; common::win32::win_atomic::init

; 22   : }

  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
releaseSpinLock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.cpp
;	COMDAT acquireSpinLock
_TEXT	SEGMENT
n$ = 32
tv71 = 36
pLock$ = 64
acquireSpinLock PROC					; COMDAT

; 9    : {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
$loop$7:

; 10   : 	int n;
; 11   : 	loop:
; 12   : 	if(!pLock->atomic_compare_exchange(1,0)) return;

  00009	45 33 c0	 xor	 r8d, r8d
  0000c	ba 01 00 00 00	 mov	 edx, 1
  00011	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pLock$[rsp]
  00016	e8 00 00 00 00	 call	 ?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z ; common::win32::win_atomic::atomic_compare_exchange
  0001b	85 c0		 test	 eax, eax
  0001d	75 02		 jne	 SHORT $LN4@acquireSpi
  0001f	eb 27		 jmp	 SHORT $LN1@acquireSpi
$LN4@acquireSpi:

; 13   : 			
; 14   : 	n = 1024;

  00021	c7 44 24 20 00
	04 00 00	 mov	 DWORD PTR n$[rsp], 1024	; 00000400H
$LN2@acquireSpi:

; 15   : 	while(n--) YieldProcessor();

  00029	8b 44 24 20	 mov	 eax, DWORD PTR n$[rsp]
  0002d	89 44 24 24	 mov	 DWORD PTR tv71[rsp], eax
  00031	8b 44 24 20	 mov	 eax, DWORD PTR n$[rsp]
  00035	ff c8		 dec	 eax
  00037	89 44 24 20	 mov	 DWORD PTR n$[rsp], eax
  0003b	83 7c 24 24 00	 cmp	 DWORD PTR tv71[rsp], 0
  00040	74 04		 je	 SHORT $LN3@acquireSpi
  00042	f3 90		 pause
  00044	eb e3		 jmp	 SHORT $LN2@acquireSpi
$LN3@acquireSpi:

; 16   : 	goto loop;

  00046	eb c1		 jmp	 SHORT $loop$7
$LN1@acquireSpi:

; 17   : }

  00048	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004c	c3		 ret	 0
acquireSpinLock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.cpp
;	COMDAT initSpinLock
_TEXT	SEGMENT
pLock$ = 48
initSpinLock PROC					; COMDAT

; 4    : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 5    : 	pLock->init();

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pLock$[rsp]
  0000e	e8 00 00 00 00	 call	 ?init@win_atomic@win32@common@@QEAAXXZ ; common::win32::win_atomic::init

; 6    : }

  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
initSpinLock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.h
;	COMDAT ?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z
_TEXT	SEGMENT
tv70 = 0
this$ = 32
nExchange$ = 40
nComperand$ = 48
?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z PROC ; common::win32::win_atomic::atomic_compare_exchange, COMDAT

; 99   : 	inline int atomic_compare_exchange(int nExchange, int nComperand) {return (int)InterlockedCompareExchange(&m_count, nExchange, nComperand);} // return long

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 18	 sub	 rsp, 24
  00012	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00017	8b 4c 24 28	 mov	 ecx, DWORD PTR nExchange$[rsp]
  0001b	48 89 04 24	 mov	 QWORD PTR tv70[rsp], rax
  0001f	8b 44 24 30	 mov	 eax, DWORD PTR nComperand$[rsp]
  00023	48 8b 14 24	 mov	 rdx, QWORD PTR tv70[rsp]
  00027	48 8b 14 24	 mov	 rdx, QWORD PTR tv70[rsp]
  0002b	f0 0f b1 0a	 lock cmpxchg DWORD PTR [rdx], ecx
  0002f	48 83 c4 18	 add	 rsp, 24
  00033	c3		 ret	 0
?atomic_compare_exchange@win_atomic@win32@common@@QEAAHHH@Z ENDP ; common::win32::win_atomic::atomic_compare_exchange
_TEXT	ENDS
; Function compile flags: /Odtp
; File e:\infinia-library-3.0\com\include\com\win32\win32_mtsync.h
;	COMDAT ?init@win_atomic@win32@common@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?init@win_atomic@win32@common@@QEAAXXZ PROC		; common::win32::win_atomic::init, COMDAT

; 94   : 	inline void init() { m_count = 0; }

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR this$[rsp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
  00010	c3		 ret	 0
?init@win_atomic@win32@common@@QEAAXXZ ENDP		; common::win32::win_atomic::init
_TEXT	ENDS
END
